#!/bin/bash

# Step 1: Compile C++ program
echo "Compiling C++ program..."
g++ main.cpp -o main_program

# Step 2: Compile C program
echo "Compiling C program..."
gcc math.c -o math_program

# Step 3: Generate Object Files
echo "Generating object files..."
g++ main.cpp -c -o main.o
g++ math.cpp -c -o math.o

# Step 4: Link Object Files to Create Executable
echo "Linking object files to create executable..."
g++ main.o math.o -o my_executable

# Step 5: Run Executable with Command-Line Arguments
echo "Running the executable with command-line arguments..."
./my_executable 1 22

# Step 6: Create a Makefile
echo "Creating a Makefile..."
cat <<EOL > Makefile
CC = g++
CFLAGS = -Wall -Wextra
OBJ = main.o math.o

my_executable: \$(OBJ)
	\$(CC) \$(CFLAGS) -o my_executable \$(OBJ)

%.o: %.cpp
	\$(CC) \$(CFLAGS) -c -o \$@ \$<

clean:
	rm -f *.o my_executable
EOL

# Step 7: Use the Makefile to Compile and Link
echo "Using the Makefile to compile and link..."
make

# Step 8: Run the Program Using Makefile Output
echo "Running the executable created by Makefile..."
./my_executable 1 22

# Step 9: Clean the Build using Makefile
echo "Cleaning the build files..."
make clean

echo "Build and execution completed successfully."
